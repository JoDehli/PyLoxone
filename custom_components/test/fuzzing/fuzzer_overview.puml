@startuml fuzzer_overview
allow_mixing
'''''''''''''''''''''''''''''''''''''''
'Fuzzer''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''
abstract class "Fuzzer" as fuzzer << abstract class >> {
    --
    - __init__(self) : void
    + fuzz() : list
}
'''''''''''''''''''''''''''''''''''''''
class "ValuePoolFuzzer" as VPFuzzer << class >> {
    --
    - __init__(self) : void
    + fuzz(self, param_nr : int, types : list, param_combi : int) : list
}
class "ValuePool" as VPool << class >> {
    - _UINT_POOL : list
    - _INT_POOL : list
    - _FLOAT_POOL : list
    - _STRING_POOL : list
    - _BOOL_POOL : list
    - _BYTE_POOL : list
    - _LIST_POOL : list
    - _DICT_POOL : list
    - _DATE_POOL : list
    - _ALL_VALUES_POOL : list
    --
    - __init__(self) : void
    + get_uint(self) : list
    + get_int(self) : list
    + get_float(self) : list
    + get_int(self) : list
    + get_uint(self) : list
    + get_float(self) : list
    + get_string(self) : list
    + get_bool(self) : list
    + get_byte(self) : list
    + get_list(self) : list
    + get_dict(self) : list
    + get_date(self) : list
    + get_all_values(self) : list
}
'''''''''''''''''''''''''''''''''''''''
class "GeneratorFuzzer" as GFuzzer << class >> {
    --
    - __init__(self) : void
    + fuzz(self, ???) : list
}
'''''''''''''''''''''''''''''''''''''''
class "GrammarFuzzer" as GrFuzzer << class >> {
    --
    - __init__(self) : void
    - _convert_to_min_cost_grammar(self, grammar: Grammar) : tuple
    - _convert_to_max_cost_grammar(self, grammar: Grammar) : tuple
    + fuzz(self, grammar: Grammar, start_symbol: Element, min_prio: boolean) : list
}
class "GrammarPool" as GrPool << class >> {
    - _IPV4_GRAMMAR : dict
    - _dict_GRAMMAR : dict
    --
    - __init__(self) : void
    + get_ipv4(self) : dict
    + get_dict(self) : dict
}
'''''''''''''''''''''''''''''''''''''''
class "MutationalFuzzer" as MFuzzer << class >> {
    --
    - __init__(self) : void
    - delete_random_character(self, s: str) : str
    - insert_random_character(self, s: str) : str
    - flip_random_character(self, s: str) : str
    + fuzz(self, seed : list, types : list, rounds : int, mode : str) : list
}
'''''''''''''''''''''''''''''''''''''''
'Runner''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''
abstract class "Runner" as runner << abstract class >> {
    --
    - __init__(self) : void
    + run() : int
}
'''''''''''''''''''''''''''''''''''''''
class "ParamRunner" as PRunner << class >> {
    --
    - __init__(self) : void
    + run(self, function : function, param_set : list) : list
    + limit_param_set(self, param_set : list, runs : int) : list
}
'''''''''''''''''''''''''''''''''''''''
'Testcases'''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''
entity  "test_vp_on_helpers.py" as test_VP_H << test case >>{
    logger
    value_pool_fuzzer
    param_runner 
    --
    test_map_range() : None
    test_hass_to_lox() : None
    test_lox_to_hass() : None
    test_lox2lox_mapped() : None
    test_lox2hass_mapped() : None
    test_to_hass_color_temp() : None
    test_to_loxone_color_temp() : None
    test_get_room_name_from_room_uuid() : None
    test_get_cat_name_from_cat_uuid() : None
    test_add_room_and_cat_to_value_values() : None
    test_get_miniserver_type() : None
    test_get_all() : None
}
'''''''''''''''''''''''''''''''''''''''
entity  "test_gen_on_XXX.py" as test_GEN << test case >>{

}
'''''''''''''''''''''''''''''''''''''''
entity  "test_gram_on_XXX.py" as test_GRA << test case >>{

}
'''''''''''''''''''''''''''''''''''''''
entity  "test_mut_on_XXX.py" as test_MUT << test case >>{

}
'''''''''''''''''''''''''''''''''''''''
'Fuzzer''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''
fuzzer <|-- VPFuzzer : inherits from <
VPool <--* VPFuzzer: has access to <
fuzzer <|-- GrFuzzer : inherits from <
fuzzer <|-- GFuzzer : inherits from <
fuzzer <|-- MFuzzer : inherits from <
'''''''''''''''''''''''''''''''''''''''
'Runner''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''
runner <|-- PRunner : inherits from <
'''''''''''''''''''''''''''''''''''''''
'Testcases'''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''
VPFuzzer <--* test_VP_H : needs a <
PRunner <--* test_VP_H : needs a <
'''''''''''''''''''''''''''''''''''''''
GrFuzzer <--* test_GRA : needs a <
PRunner <--* test_GRA : needs a <
test_GRA *-> GrPool: needs a >
'''''''''''''''''''''''''''''''''''''''
GFuzzer <--* test_GEN : needs a <
'''''''''''''''''''''''''''''''''''''''
MFuzzer <--* test_MUT : needs a <
PRunner <--* test_MUT : needs a <
@enduml